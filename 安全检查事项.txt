 WEB 应用安全：
1) 应具备后端数据校验机制，防止输入恶意数据。
2) 账号密码应使用至少包括数字、大小写字母， 长度不少于 8 位的强复杂度的口令，防止被猜解口令。
3) 应具备 token 身份校验机制，防止身份被恶意使用。
4) 禁止执行从用户构造的 XML 语句，防止执行恶意 XML。
5) 应具备后端数据白名单校验机制，防止恶意上传文件。
6) 敏感数据应加密存储，防止被明文读取。
7) 应时升级服务及器版本，防止历史漏洞被利用。
8) 站点目录应具有访问控制限制，防止目录被非法恶意遍历。
9) 应使用权限最小化原则开发，确保用户使用最小权限，防止逻辑漏洞。
10) 应禁止拼接 URL 执行，防止拼接输入恶意数据。
数据库安全
1) 应具备 SQL 语句合法性校验机制，防止 SQL 语句恶意注入。
2) 数据库密码应使用至少包括数字、大小写字母， 长度不少于 8 位的强复杂度的口令，防止被猜解口令。
中间件安全
1) 应及时升级中间件版本，防止历史漏洞被利用。
2) 应关闭远程部署相应功能，防止远程登陆中间件。
3) 应设置合理的解析白名单，防止出现异常解析。
服务器安全
1) 应关闭常见危险端口，防止利用端口攻击服务器。
2) 应及时对服务器补丁进行修补，防止新产生漏洞被利用，造成提权等风险
3) 服务器密码应使用至少包括数字、大小写字母， 长度不少于 8 位的强复杂度的口令，防止被猜解口令。
4) 应使用正确的项目发布流程，防止发布的项目中带有源码信息。
5) 应对服务器进行合理的安全配置，防止不当的安全配置被利用。
接口通信信息安全
1)通信数据包应具备防非法篡改的能力；
2)通信数据包应使用密文传输。
3)API接口不应执行JS恶意脚本
4)API接口交互相关功能不应允许非授权用户执行查询语句
5)云平台API接口在到达规定最大调用次数时，不应允许同一程序调用同一接口
客户端程序安全
a）客户端程序应具备防逆向的功能；
b）客户端程序的签名逻辑不应存在于JNI层，并且应对代码进行加密；
c）客户端程序应具备防二次打包机制。
