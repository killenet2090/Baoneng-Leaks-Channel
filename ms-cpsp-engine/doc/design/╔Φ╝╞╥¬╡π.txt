1. 框架的设计
	1. 根据传输的参数获取cpsp配置
		cpsp策略配置信息
			是否需要缓存，缓存多久
			是否需要持久化
			是否需要重试，重试多久，重试间隔
		供应商列表，优先级，服务质量等级，供应商接口实现类
		
	2. 根据策略获取cpsp数据
		支撑优先缓存
			缓存中没数据
				根据策略选择cpsp供应商
				通过在线接口访问数据
					如果调用成功
						如果数据需要缓存
							缓存数据，缓存的数据时间长度在策略中可配置
						如果数据需要持久化
							持久化数据
						返回数据
					否则（调用失败）
						如果需要重试，
							则重试一定的次数（次数在策略中配置）
							更新错误计数
			如果缓存中有数据
				直接返回缓存中的数据
		优先在线数据
			根据策略选择cpsp供应商
			通过在线接口访问数据
				如果调用成功
					如果数据需要缓存
						缓存数据，缓存的数据时间长度在策略中可配置
					如果数据需要持久化
						持久化数据
					返回数据
				否则（调用失败）
					如果需要重试，
						则重试一定的次数（次数在策略中配置）
						更新错误计数
			如果最终获取数据失败
				从缓存中获取数据
					如果从缓存中获取失败
						返回
					否则
						返回数据
2. 框架实现的逻辑检查要点
	1. 缓存
		优先缓存，优先在线数据两种模式的支撑
		缓存时间可配置，可动态调整
    2. 持久化
		能看到持久化的文件，持久化策略，更新设计
    3. cpsp供应商的选择
	4. 策略
		是否需要缓存，缓存多久
		是否需要持久化
		是否需要重试，重试多久，重试间隔
	5. 支撑应用参数的传入		
	6. 在应用层可能需要访问用户信息
	
3. 框架的开发使用
	后台配置说明
	业务开发使用说明
4. 框架的测试验证